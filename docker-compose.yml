version: '3.3'

services:
  static:
    build: ./static
    restart: always
    ports:
      - 8080
    networks:
      - traefik_default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_default
      - traefik.http.routers.server-static.rule=Host(`server.markormesher.co.uk`, `www.server.markormesher.co.uk`)
      - traefik.http.routers.server-static.tls.certresolver=letsencrypt
      - traefik.http.routers.server-static.middlewares=strip-www@file,server-admin-auth@file

  traefik:
    build: ./traefik
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    networks:
      - traefik_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - cert-storage:/certs/
    secrets:
      - admin-users
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_default
      - traefik.http.routers.server-traefik.rule=Host(`server.markormesher.co.uk`, `www.server.markormesher.co.uk`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.server-traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.server-traefik.middlewares=strip-www@file,server-admin-auth@file
      - traefik.http.routers.server-traefik.service=api@internal

  portainer:
    image: portainer/portainer-ce
    restart: always
    command: --admin-password-file '/run/secrets/admin-password'
    ports:
      - 8000
      - 9000
    networks:
      - traefik_default
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    secrets:
      - admin-password
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_default
      - traefik.http.middlewares.portainer-server-admin-stripprefix.stripprefix.prefixes=/portainer
      - traefik.http.middlewares.portainer-server-admin-stripprefix.stripprefix.forceSlash=false
      - traefik.http.routers.portainer-server-admin.rule=Host(`server.markormesher.co.uk`, `www.server.markormesher.co.uk`) && PathPrefix(`/portainer`)
      - traefik.http.routers.portainer-server-admin.tls.certresolver=letsencrypt
      - traefik.http.routers.portainer-server-admin.middlewares=strip-www@file,portainer-server-admin-stripprefix@docker
      - traefik.http.services.portainer-server-admin.loadbalancer.server.port=9000

  influxdb:
    image: influxdb
    restart: always
    networks:
      - internal
    volumes:
      - influxdb-data:/var/lib/influxdb

  grafana:
    build: ./grafana
    restart: always
    ports:
      - 3000
    networks:
      - traefik_default
      - internal
    environment:
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/admin-password
    depends_on:
      - influxdb
    volumes:
      - grafana-data:/var/lib/grafana
    secrets:
      - admin-password
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_default
      - traefik.http.routers.server-grafana.rule=Host(`server.markormesher.co.uk`, `www.server.markormesher.co.uk`) && PathPrefix(`/grafana`)
      - traefik.http.routers.server-grafana.tls.certresolver=letsencrypt
      # - traefik.http.routers.server-grafana.middlewares=strip-www@file

  telegraf:
    build: ./telegraf
    restart: always
    networks:
      - internal
    depends_on:
      - influxdb
    environment:
      - HOST_MOUNT_PREFIX=/rootfs
      - HOST_ETC=/rootfs/etc
      - HOST_PROC=/rootfs/proc
      - HOST_RUN=/rootfs/run
      - HOST_SYS=/rootfs/sys
      - HOST_VAR=/rootfs/var
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro

volumes:
  grafana-data:
  influxdb-data:
  portainer-data:
  cert-storage:

networks:
  internal:
    external: false
  traefik_default:
    external: true

secrets:
  admin-password:
    file: ./secrets/admin-password
  admin-users:
    file: ./secrets/admin-users
